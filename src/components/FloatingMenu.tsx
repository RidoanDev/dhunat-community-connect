
import React, { useState, useRef, useEffect } from 'react';
import { Send, User, X, Bot, Sparkles } from 'lucide-react';
import { format } from 'date-fns';

interface Message {
  id: string;
  content: string;
  role: 'user' | 'assistant';
  timestamp: Date;
}

export const LiveChat = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [unreadCount, setUnreadCount] = useState(0);
  const inputRef = useRef<HTMLInputElement>(null);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const containerRef = useRef<HTMLDivElement>(null);

  // Enhanced constant replies with complete portfolio information
  const getConstantReply = (userInput: string): string | null => {
    const lowerInput = userInput.toLowerCase();

    // Personal Information & Bio
    if (
      lowerInput.includes('who') ||
      lowerInput.includes('developer') ||
      lowerInput.includes('creator') ||
      lowerInput.includes('ridoan') ||
      lowerInput.includes('zisan') ||
      lowerInput.includes('about') ||
      lowerInput.includes('ржХрзЗ') ||
      lowerInput.includes('ржкрж░рж┐ржЪржпрж╝')
    ) {
      return `ЁЯМЯ ржЖржорж┐ ржорзЛрж╣рж╛ржорзНржоржж рж░рж┐ржжрзЛржпрж╝рж╛ржи ржорж╛рж╣ржорзБржж ржЬрж┐рж╕рж╛ржи!

ЁЯСд **ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп:**
ЁЯУЕ ржЬржирзНржо: рзйрзз ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзжрзн (ржмржпрж╝рж╕: рззрзм)
ЁЯПа ржарж┐ржХрж╛ржирж╛: ржмржЧрзБржбрж╝рж╛, ржмрж╛ржВрж▓рж╛ржжрзЗрж╢
ЁЯй╕ рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк: ржмрж┐ ржкржЬрж┐ржЯрж┐ржн (B+)
тШкя╕П ржзрж░рзНржо: ржЗрж╕рж▓рж╛ржо

ЁЯОУ **рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржпрзЛржЧрзНржпрждрж╛:**
тАв ржПржЗржЪржПрж╕рж╕рж┐ (рзирзжрзирзк) - ржЬрж┐ржкрж┐ржП рзл.рзжрзж 
тАв ржПрж╕ржПрж╕рж╕рж┐ (рзирзжрзирзи) - ржЬрж┐ржкрж┐ржП рзл.рзжрзж

ЁЯТ╝ **ржкрзЗрж╢рж╛:** ржЫрж╛рждрзНрж░, ржУржпрж╝рзЗржм ржбрзЗржнрзЗрж▓ржкрж╛рж░ ржУ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзЗржмржХ

ЁЯМЯ **рж▓ржХрзНрж╖рзНржп:** ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ ржорж╛ржзрзНржпржорзЗ ржорж╛ржиржмрждрж╛рж░ рж╕рзЗржмрж╛ ржХрж░рж╛

ржЖржорж╛рж░ рж╕ржорзНржкрж░рзНржХрзЗ ржЖрж░ржУ ржЬрж╛ржирждрзЗ ржЪрж╛ржЗрж▓рзЗ ржкрзНрж░рж╢рзНржи ржХрж░рзБржи!`;
    }

    // Contact Information
    if (
      lowerInput.includes('contact') ||
      lowerInput.includes('email') ||
      lowerInput.includes('phone') ||
      lowerInput.includes('reach') ||
      lowerInput.includes('connect') ||
      lowerInput.includes('ржпрзЛржЧрж╛ржпрзЛржЧ') ||
      lowerInput.includes('ржЗржорзЗржЗрж▓') ||
      lowerInput.includes('ржлрзЛржи')
    ) {
      return `ЁЯУЮ **ржпрзЛржЧрж╛ржпрзЛржЧрзЗрж░ рждржерзНржп:**

ЁЯУз **ржЗржорзЗржЗрж▓:** ridoan.zisan@gmail.com
ЁЯУ▒ **ржорзЛржмрж╛ржЗрж▓:** +рзорзорзжрззрзнрззрзирзлрзирзлрзпрззрзж
ЁЯУН **ржарж┐ржХрж╛ржирж╛:** ржмржЧрзБржбрж╝рж╛, ржмрж╛ржВрж▓рж╛ржжрзЗрж╢
ЁЯФЧ **рж▓рж┐ржВржХржбржЗржи:** https://linkedin.com/in/ridoan2007

**ржпрзЛржЧрж╛ржпрзЛржЧрзЗрж░ ржЙржкрж╛ржпрж╝:**
тЬЕ ржЗржорзЗржЗрж▓ (ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЖрж▓рзЛржЪржирж╛рж░ ржЬржирзНржп)
тЬЕ ржлрзЛржи/рж╣рзЛржпрж╝рж╛ржЯрж╕ржЕрзНржпрж╛ржк (ржЬрж░рзБрж░рж┐ ржмрж┐рж╖ржпрж╝рзЗ)
тЬЕ рж▓рж┐ржВржХржбржЗржи (ржкрзЗрж╢рж╛ржжрж╛рж░ ржирзЗржЯржУржпрж╝рж╛рж░рзНржХрж┐ржВ)

**рж╕рж╛ржбрж╝рж╛ ржжрзЗржУржпрж╝рж╛рж░ рж╕ржоржпрж╝:** рж╕рж╛ржзрж╛рж░ржгржд рзирзк ржШржирзНржЯрж╛рж░ ржоржзрзНржпрзЗ
**рж╕ржХрзНрж░рж┐ржпрж╝ рж╕ржоржпрж╝:** рж╕ржХрж╛рж▓ рзпржЯрж╛ - рж░рж╛ржд рззрзжржЯрж╛ (ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ рж╕ржоржпрж╝)

ржпрзЗржХрзЛржирзЛ рж╕рж╣ржпрзЛржЧрж┐рждрж╛, ржкрзНрж░ржЬрзЗржХрзНржЯ ржмрж╛ ржЖржбрзНржбрж╛рж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи! ЁЯШК`;
    }

    // Skills & Technical Expertise
    if (
      lowerInput.includes('skill') ||
      lowerInput.includes('technology') ||
      lowerInput.includes('programming') ||
      lowerInput.includes('web') ||
      lowerInput.includes('development') ||
      lowerInput.includes('ржжржХрзНрж╖рждрж╛') ||
      lowerInput.includes('ржкрзНрж░ржпрзБржХрзНрждрж┐') ||
      lowerInput.includes('ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ')
    ) {
      return `ЁЯТ╗ **ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд ржжржХрзНрж╖рждрж╛:**

**ЁЯМР ржУржпрж╝рзЗржм ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯ:**
тАв Frontend: HTML5, CSS3, JavaScript (ES6+)
тАв Framework: React.js, Vite
тАв Styling: Tailwind CSS, Responsive Design
тАв Tools: Firebase, Git, VS Code

**ЁЯдЦ ржЙржжрзАржпрж╝ржорж╛ржи ржкрзНрж░ржпрзБржХрзНрждрж┐:**
тАв ржХрзГрждрзНрж░рж┐ржо ржмрзБржжрзНржзрж┐ржорждрзНрждрж╛ ржУ ржорзЗрж╢рж┐ржи рж▓рж╛рж░рзНржирж┐ржВ
тАв Python Programming
тАв ржбрзЗржЯрж╛ рж╕рж╛ржпрж╝рзЗржирзНрж╕ ржорзМрж▓рж┐ржХ ржмрж┐рж╖ржпрж╝
тАв рж╕рж╛ржЗржмрж╛рж░ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржорзМрж▓рж┐ржХ ржмрж┐рж╖ржпрж╝

**ЁЯТ╝ ржкрзЗрж╢рж╛ржжрж╛рж░ ржжржХрзНрж╖рждрж╛:**
тАв Microsoft Office Suite (Expert Level)
тАв ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржорж╛рж░рзНржХрзЗржЯрж┐ржВ ржУ SEO
тАв ржЗржорзЗржЗрж▓ ржпрзЛржЧрж╛ржпрзЛржЧ ржУ ржмрзНржпржмрж╕рж╛ржпрж╝рж┐ржХ рж▓рзЗржЦрж╛рж▓рзЗржЦрж┐
тАв ржкрзНрж░ржЬрзЗржХрзНржЯ ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ ржУ ржЯрж┐ржо рж╕рж╣ржпрзЛржЧрж┐рждрж╛

**ЁЯОи рж╕рзГржЬржирж╢рзАрж▓ ржжржХрзНрж╖рждрж╛:**
тАв UI/UX ржбрж┐ржЬрж╛ржЗржи ржирзАрждрж┐
тАв Canva ржУ ржмрзЗрж╕рж┐ржХ Photoshop
тАв ржХржирзНржЯрзЗржирзНржЯ рждрзИрж░рж┐ ржУ рж╕рзЛрж╢рзНржпрж╛рж▓ ржорж┐ржбрж┐ржпрж╝рж╛ ржкрж░рж┐ржЪрж╛рж▓ржирж╛

**ЁЯЧгя╕П ржнрж╛рж╖рж╛:** ржмрж╛ржВрж▓рж╛ (ржорж╛рждрзГржнрж╛рж╖рж╛) тАв ржЗржВрж░рзЗржЬрж┐ (ржкрзЗрж╢рж╛ржжрж╛рж░) тАв ржмрзЗрж╕рж┐ржХ ржЖрж░ржмрж┐`;
    }

    // Projects Portfolio
    if (
      lowerInput.includes('project') ||
      lowerInput.includes('work') ||
      lowerInput.includes('portfolio') ||
      lowerInput.includes('bobdo') ||
      lowerInput.includes('uniconverter') ||
      lowerInput.includes('ржкрзНрж░ржЬрзЗржХрзНржЯ') ||
      lowerInput.includes('ржХрж╛ржЬ')
    ) {
      return `ЁЯЪА **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржкрзНрж░ржЬрзЗржХрзНржЯрж╕ржорзВрж╣:**

**ЁЯй╕ BOBDO - рж░ржХрзНрждржжрж╛ржи ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо**
тАв **ржкрзНрж░ржнрж╛ржм:** рзмрзо,рзжрзжрзж+ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕ржжрж╕рзНржп рж╕рзЗржмрж╛ ржкрзНрж░ржжрж╛ржи
тАв **ржкрзНрж░ржпрзБржХрзНрждрж┐:** React.js + Firebase рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржо ржбрзЗржЯрж╛ржмрзЗрж╕
тАв **ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:** ржжрж╛рждрж╛ ржЦрзЛржБржЬрж╛, ржЕржмрж╕рзНржерж╛ржи-ржнрж┐рждрзНрждрж┐ржХ ржЕржирзБрж╕ржирзНржзрж╛ржи, ржЬрж░рзБрж░рж┐ рж╕рждрж░рзНржХрждрж╛
тАв **рж╕рж╛ржлрж▓рзНржп:** рзкрзж% ржжрзНрж░рзБрждрждрж░ ржЬрж░рзБрж░рж┐ рж╕рж╛ржбрж╝рж╛
тАв **рж▓рж╛ржЗржн:** https://bobdo.netlify.app

**ЁЯУР UniConverter - рж╕рж╛рж░рзНржмржЬржирзАржи ржПржХржХ рж░рзВржкрж╛ржирзНрждрж░ржХрж╛рж░рзА**
тАв **ржЙржжрзНржжрзЗрж╢рзНржп:** рзлрзж+ ржкрж░рж┐ржорж╛ржк ржмрж┐ржнрж╛ржЧ рж░рзВржкрж╛ржирзНрждрж░ржХрж╛рж░рзА
тАв **ржкрзНрж░ржпрзБржХрзНрждрж┐:** Progressive Web App (PWA)
тАв **ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:** ржЕржлрж▓рж╛ржЗржи ржХрж╛рж░рзНржпржХрж╛рж░рж┐рждрж╛, рж░рзЗрж╕рзНржкржирзНрж╕рж┐ржн ржбрж┐ржЬрж╛ржЗржи
тАв **ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА:** рззрзжрзжрзж+ ржорж╛рж╕рж┐ржХ рж╕ржХрзНрж░рж┐ржпрж╝ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА
тАв **рж▓рж╛ржЗржн:** https://uniconverter.netlify.app

**ЁЯТ╗ DevHub - ржмрзНржпржХрзНрждрж┐ржЧржд ржкрзЛрж░рзНржЯржлрж▓рж┐ржУ**
тАв **ржкрзНрж░ржжрж░рзНрж╢ржирзА:** рж╕ржорзНржкрзВрж░рзНржг ржкрзЗрж╢рж╛ржжрж╛рж░ ржкрзЛрж░рзНржЯржлрж▓рж┐ржУ
тАв **ржкрзНрж░ржпрзБржХрзНрждрж┐:** React + TypeScript + Tailwind CSS
тАв **ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:** ржмрж╣рзБржнрж╛рж╖рж┐ржХ, ржбрж╛рж░рзНржХ/рж▓рж╛ржЗржЯ ржорзЛржб, ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи
тАв **рж▓рж╛ржЗржн:** https://devhub-i.netlify.app

**ЁЯМР ржзрзБржирж╛ржЯ ржХржорж┐ржЙржирж┐ржЯрж┐ ржХрж╛ржирзЗржХрзНржЯ**
тАв **рж▓ржХрзНрж╖рзНржп:** рж╕рзНржерж╛ржирзАржпрж╝ ржмрзНржпржмрж╕рж╛ ржУ рж╕рзЗржмрж╛ ржбрж┐рж░рзЗржХрзНржЯрж░рж┐
тАв **ржЕржмрж╕рзНржерж╛:** ржЙржирзНржиржпрж╝ржирж╛ржзрзАржи
тАв **ржкрзНрж░ржнрж╛ржм:** рж╕рзНржерж╛ржирзАржпрж╝ ржЕрж░рзНржержирзАрждрж┐ ржУ рж╕ржВржпрзЛржЧ рж╕рж╣рж╛ржпрж╝рждрж╛`;
    }

    // Education Details
    if (
      lowerInput.includes('education') ||
      lowerInput.includes('study') ||
      lowerInput.includes('school') ||
      lowerInput.includes('college') ||
      lowerInput.includes('academic') ||
      lowerInput.includes('рж╢рж┐ржХрзНрж╖рж╛') ||
      lowerInput.includes('ржкржбрж╝рж╛рж╢рзЛржирж╛')
    ) {
      return `ЁЯОУ **рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржкржЯржнрзВржорж┐:**

**ржЙржЪрзНржЪржорж╛ржзрзНржпржорж┐ржХ рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ (HSC) - рзирзжрзирзк**
ЁЯПл ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи: ржХрж░рждрзЛржпрж╝рж╛ ржорж╛рж▓рзНржЯрж┐ржорж┐ржбрж┐ржпрж╝рж╛ рж╕рзНржХрзБрж▓ ржЕрзНржпрж╛ржирзНржб ржХрж▓рзЗржЬ
ЁЯУК ржлрж▓рж╛ржлрж▓: ржЬрж┐ржкрж┐ржП рзл.рзжрзж/рзл.рзжрзж тнР
ЁЯУЪ ржмрж┐ржнрж╛ржЧ: ржмрж┐ржЬрзНржЮрж╛ржи
ЁЯФв ржкрзНрж░ржзрж╛ржи ржмрж┐рж╖ржпрж╝: ржЙржЪрзНржЪрждрж░ ржЧржгрж┐ржд
ЁЯПЖ ржЕрж░рзНржЬржи: рж╕ржХрж▓ ржмрж┐рж╖ржпрж╝рзЗ ржирж┐ржЦрзБржБржд ржиржорзНржмрж░

**ржорж╛ржзрзНржпржорж┐ржХ рж╕рзНржХрзБрж▓ рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ (SSC) - рзирзжрзирзи**
ЁЯПл ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи: ржзрзБржирж╛ржЯ рж╕рж░ржХрж╛рж░рж┐ ржПржи.ржЗржЙ. ржкрж╛ржЗрж▓ржЯ ржоржбрзЗрж▓ рж╣рж╛ржЗ рж╕рзНржХрзБрж▓
ЁЯУК ржлрж▓рж╛ржлрж▓: ржЬрж┐ржкрж┐ржП рзл.рзжрзж/рзл.рзжрзж тнР
ЁЯУЪ ржмрж┐ржнрж╛ржЧ: ржмрж┐ржЬрзНржЮрж╛ржи
ЁЯФв ржкрзНрж░ржзрж╛ржи ржмрж┐рж╖ржпрж╝: ржЙржЪрзНржЪрждрж░ ржЧржгрж┐ржд
ЁЯПЖ ржЕрж░рзНржЬржи: ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХ ржПржХрж╛ржбрзЗржорж┐ржХ рж╢рзНрж░рзЗрж╖рзНржарждрзНржм

**ржПржХрж╛ржбрзЗржорж┐ржХ рж╢ржХрзНрждрж┐:**
тАв ржЙржирзНржиржд ржЧржгрж┐ржд ржУ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи
тАв ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржмрж┐ржЬрзНржЮрж╛ржи ржУ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ рж▓ржЬрж┐ржХ
тАв ржмрзИржЬрзНржЮрж╛ржирж┐ржХ ржЧржмрзЗрж╖ржгрж╛ ржУ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг
тАв рж╕ржорж╛рж▓рзЛржЪржирж╛ржорзВрж▓ржХ ржЪрж┐ржирзНрждрж╛ржнрж╛ржмржирж╛ ржУ ржЙржжрзНржнрж╛ржмржи`;
    }

    // Volunteer Work & Community Service
    if (
      lowerInput.includes('volunteer') ||
      lowerInput.includes('community') ||
      lowerInput.includes('service') ||
      lowerInput.includes('blood') ||
      lowerInput.includes('donation') ||
      lowerInput.includes('рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ') ||
      lowerInput.includes('рж╕ржорж╛ржЬрж╕рзЗржмрж╛') ||
      lowerInput.includes('рж░ржХрзНрждржжрж╛ржи')
    ) {
      return `ЁЯдЭ **рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржХрж╛ржЬ ржУ рж╕ржорж╛ржЬрж╕рзЗржмрж╛:**

**ЁЯй╕ BOBDO - ржкрзНрж░ржзрж╛ржи рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржУ ржбрзЗржнрзЗрж▓ржкрж╛рж░ (рзирзжрзирзй-ржмрж░рзНрждржорж╛ржи)**
тАв **ржнрзВржорж┐ржХрж╛:** ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо ржбрзЗржнрзЗрж▓ржкрж╛рж░ ржУ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕ржоржирзНржмржпрж╝ржХрж╛рж░рзА
тАв **ржкрзНрж░ржнрж╛ржм:** рзмрзо,рзжрзжрзж+ ржирж┐ржмржирзНржзрж┐ржд ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕ржжрж╕рзНржп
тАв **ржЕрж░рзНржЬржи:** ржЬрж░рзБрж░рж┐ рж╕рж╛ржбрж╝рж╛ рж╕ржоржпрж╝ рзкрзж% ржХржорж╛ржирзЛ
тАв **рж╕рзЗржмрж╛:** рж░ржХрзНрждржжрж╛ржи рж╕ржоржирзНржмржпрж╝, ржкрзНрж░рж╛ржержорж┐ржХ ржЪрж┐ржХрж┐рзОрж╕рж╛ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг
тАв **рж╕рзНржмрзАржХрзГрждрж┐:** ржЕрж╕рж╛ржорж╛ржирзНржп рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ рж╕рзЗржмрж╛ ржкрзБрж░рж╕рзНржХрж╛рж░

**ЁЯТб ржХржорж┐ржЙржирж┐ржЯрж┐ ржЯрзЗржХ рж╕ржорж╛ржзрж╛ржи:**
тАв **ржбрж┐ржЬрж┐ржЯрж╛рж▓ рж╕рж╛ржХрзНрж╖рж░рждрж╛:** ржмржпрж╝рж╕рзНржХ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕ржжрж╕рзНржпржжрзЗрж░ рж╢рзЗржЦрж╛ржирзЛ
тАв **ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯ:** рж╕рзНржерж╛ржирзАржпрж╝ ржмрзНржпржмрж╕рж╛рж░ ржЬржирзНржп ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ
тАв **ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд рж╕рж╣рж╛ржпрж╝рждрж╛:** ржХржорзНржкрж┐ржЙржЯрж╛рж░ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи ржУ ржорзЗрж░рж╛ржоржд

**ЁЯОУ рж╢рж┐ржХрзНрж╖рж╛ржорзВрж▓ржХ рж╕рж╣рж╛ржпрж╝рждрж╛:**
тАв **ржЯрж┐ржЙржЯрж░рж┐ржВ:** ржЧржгрж┐ржд ржУ ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржмрж┐ржЬрзНржЮрж╛ржирзЗ ржЫрж╛рждрзНрж░ржжрзЗрж░ рж╕рж╣рж╛ржпрж╝рждрж╛
тАв **ржХрзНржпрж╛рж░рж┐ржпрж╝рж╛рж░ ржЧрж╛ржЗржбрзЗржирзНрж╕:** рж╕рж┐ржнрж┐ рж▓рзЗржЦрж╛ ржУ ржЗржирзНржЯрж╛рж░ржнрж┐ржЙ ржкрзНрж░рж╕рзНрждрзБрждрж┐
тАв **ржорзЗржирзНржЯрж░рж╢рж┐ржк:** ржЙржжрзАржпрж╝ржорж╛ржи ржбрзЗржнрзЗрж▓ржкрж╛рж░ржжрзЗрж░ ржжрж┐ржХржирж┐рж░рзНржжрзЗрж╢ржирж╛

**ЁЯМ▒ ржкрж░рж┐ржмрзЗрж╢ржЧржд ржЙржжрзНржпрзЛржЧ:**
тАв **рж╕ржЪрзЗрждржирждрж╛ ржкрзНрж░ржЪрж╛рж░:** ржЬрж▓ржмрж╛ржпрж╝рзБ ржкрж░рж┐ржмрж░рзНрждржи ржУ ржЯрзЗржХрж╕ржЗ ржЙржирзНржиржпрж╝ржи
тАв **ржмрзГржХрзНрж╖рж░рзЛржкржг:** рж╕рзНржерж╛ржирзАржпрж╝ ржкрж░рж┐ржмрзЗрж╢ржЧржд ржкрзНрж░ржХрж▓рзНржк
тАв **ржмрж░рзНржЬрзНржп ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛:** ржХржорж┐ржЙржирж┐ржЯрж┐ ржкрж░рж┐ржЪрзНржЫржирзНржирждрж╛ ржЕржнрж┐ржпрж╛ржи

**ржорзВрж▓рзНржпржмрзЛржз:** "ржорж╛ржиржмрждрж╛рж░ рж╕рзЗржмрж╛ржЗ ржЖрж▓рзНрж▓рж╛рж╣рж░ рж╕рзЗржмрж╛" - ржПржЗ ржирзАрждрж┐ ржЖржорж╛рж░ рж╕ржХрж▓ рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржХрж╛ржЬрзЗрж░ ржЪрж╛рж▓рж┐ржХрж╛рж╢ржХрзНрждрж┐ред`;
    }

    // Future Goals & Career Plans
    if (
      lowerInput.includes('future') ||
      lowerInput.includes('goal') ||
      lowerInput.includes('plan') ||
      lowerInput.includes('career') ||
      lowerInput.includes('dream') ||
      lowerInput.includes('ржнржмрж┐рж╖рзНржпрзО') ||
      lowerInput.includes('рж▓ржХрзНрж╖рзНржп') ||
      lowerInput.includes('ржкрж░рж┐ржХрж▓рзНржкржирж╛')
    ) {
      return `ЁЯОп **ржнржмрж┐рж╖рзНржпрзО рж▓ржХрзНрж╖рзНржп ржУ ржХрзНржпрж╛рж░рж┐ржпрж╝рж╛рж░ ржкрж░рж┐ржХрж▓рзНржкржирж╛:**

**ЁЯОУ рждрж╛рзОржХрзНрж╖ржгрж┐ржХ рж▓ржХрзНрж╖рзНржп (рзирзжрзирзк-рзирзжрзирзл):**
тАв ржХржорзНржкрж┐ржЙржЯрж╛рж░ рж╕рж╛ржпрж╝рзЗржирзНрж╕ ржЗржЮрзНржЬрж┐ржирж┐ржпрж╝рж╛рж░рж┐ржВ-ржП ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓ржпрж╝рзЗ ржнрж░рзНрждрж┐
тАв ржЙржирзНржиржд React.js ржУ Full-stack ржЙржирзНржиржпрж╝ржи
тАв рззрзж+ ржкрзЗрж╢рж╛ржжрж╛рж░ ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕ржорзНржкржирзНржи ржХрж░рж╛
тАв ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕ржорж╛ржзрж╛ржи ржХрзЗржирзНржжрзНрж░рж┐ржХ ржЯрзЗржХ рж╕рзНржЯрж╛рж░рзНржЯржЖржк ржЪрж╛рж▓рзБ ржХрж░рж╛

**ЁЯТ╝ ржХрзНржпрж╛рж░рж┐ржпрж╝рж╛рж░ ржкрже (рзирзжрзирзл-рзирзжрзйрзж):**
тАв **рж╕ржлржЯржУржпрж╝рзНржпрж╛рж░ ржЗржЮрзНржЬрж┐ржирж┐ржпрж╝рж╛рж░** - рж╢рзАрж░рзНрж╖ ржЯрзЗржХ ржХрзЛржорзНржкрж╛ржирж┐рждрзЗ
тАв **ржХржорж┐ржЙржирж┐ржЯрж┐ ржЯрзЗржХ рж▓рж┐ржбрж╛рж░** - рж╕рзНржерж╛ржирзАржпрж╝ ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЙржжрзНржпрзЛржЧ
тАв **ржЗрж╕рж▓рж╛ржорж┐ржХ ржЯрзЗржХ ржЧржмрзЗрж╖ржХ** - ржкрзНрж░ржпрзБржХрзНрждрж┐ ржирзИрждрж┐ржХрждрж╛
тАв **рж╕рж╛ржорж╛ржЬрж┐ржХ ржЙржжрзНржпрзЛржХрзНрждрж╛** - рж╕рж╛ржорж╛ржЬрж┐ржХ ржХрж▓рзНржпрж╛ржгрзЗ ржкрзНрж░ржпрзБржХрзНрждрж┐

**ЁЯМН ржжрзАрж░рзНржШржорзЗржпрж╝рж╛ржжрзА рж╕рзНржмржкрзНржи (рзирзжрзйрзж+):**
тАв **ржЯрзЗржХ ржХрзЛржорзНржкрж╛ржирж┐ ржкрзНрж░рждрж┐рж╖рзНржарж╛рждрж╛** - ржорж╛ржиржмрж┐ржХ ржлрзЛржХрж╛рж╕ ржирж┐ржпрж╝рзЗ
тАв **ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржмржХрзНрждрж╛** - ржЗрж╕рж▓рж╛ржорж┐ржХ ржЯрзЗржХ ржирзИрждрж┐ржХрждрж╛
тАв **ржХржорж┐ржЙржирж┐ржЯрж┐ ржЙржирзНржиржпрж╝ржи ржирзЗрждрж╛** - ржЬрж╛рждрзАржпрж╝ ржкрж░рзНржпрж╛ржпрж╝рзЗ
тАв **рж╢рж┐ржХрзНрж╖рж╛ рж╕ржВрж╕рзНржХрж╛рж░ржХ** - ржбрж┐ржЬрж┐ржЯрж╛рж▓ рж╢рж┐ржХрзНрж╖рж╛ ржмрж┐ржкрзНрж▓ржм

**ЁЯЪА рж╕рзНржмржкрзНржирзЗрж░ ржкрзНрж░ржЬрзЗржХрзНржЯ:**
тАв ржЧрзНрж▓рзЛржмрж╛рж▓ ржЗрж╕рж▓рж╛ржорж┐ржХ рж╢рж┐ржХрзНрж╖рж╛ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо
тАв AI-ржЪрж╛рж▓рж┐ржд ржХрзБрж░ржЖржи ржЕржирзБржмрж╛ржж ржУ рждрж╛ржлрж╕рж┐рж░
тАв ржмрж┐рж╢рзНржмржмрзНржпрж╛ржкрзА ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзЗржмрж╛ ржирзЗржЯржУржпрж╝рж╛рж░рзНржХ
тАв ржЙржирзНржиржпрж╝ржирж╢рзАрж▓ ржжрзЗрж╢рзЗрж░ ржЬржирзНржп ржЯрзЗржХ рж╕ржорж╛ржзрж╛ржи

**ЁЯТб ржорж┐рж╢ржи рж╕рзНржЯрзЗржЯржорзЗржирзНржЯ:**
"ржЖрж▓рзНрж▓рж╛рж╣рж░ рж╕рзГрж╖рзНржЯрж┐рж░ рж╕рзЗржмрж╛рж░ ржорж╛ржзрзНржпржо рж╣рж┐рж╕рзЗржмрзЗ ржкрзНрж░ржпрзБржХрзНрждрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛, ржХржорж┐ржЙржирж┐ржЯрж┐рж░ ржоржзрзНржпрзЗ рж╕рзЗрждрзБржмржирзНржзржи рждрзИрж░рж┐ ржХрж░рж╛, ржПржмржВ ржЙржжрзНржнрж╛ржмржи ржУ рж╕рзЗржмрж╛рж░ ржорж╛ржзрзНржпржорзЗ ржЖрж░ржУ ржирзНржпрж╛ржпрж╝рж╕ржЩрзНржЧржд ржУ рж╕ржорждрж╛ржкрзВрж░рзНржг ржмрж┐рж╢рзНржм рждрзИрж░рж┐ ржХрж░рж╛ред"`;
    }

    // Poetry & Creative Work
    if (
      lowerInput.includes('poetry') ||
      lowerInput.includes('poem') ||
      lowerInput.includes('writing') ||
      lowerInput.includes('creative') ||
      lowerInput.includes('ржХржмрж┐рждрж╛') ||
      lowerInput.includes('рж▓рзЗржЦрж╛рж▓рзЗржЦрж┐')
    ) {
      return `тЬНя╕П **ржХржмрж┐рждрж╛ ржУ рж╕рзГржЬржирж╢рзАрж▓ ржкрзНрж░ржХрж╛рж╢:**

**ЁЯОн ржХржмрж┐рждрж╛ рж╕ржВржЧрзНрж░рж╣ - "ржХржмрж┐рждрж╛рж░ ржнрзБржмржи"**
*"рж╣рзГржжржпрж╝рзЗрж░ ржЧржнрзАрж░ ржерзЗржХрзЗ ржЙржарзЗ ржЖрж╕рж╛ ржЫржирзНржжржоржпрж╝ ржЕржнрж┐ржмрзНржпржХрзНрждрж┐"*

**ржмрж┐рж╢рзЗрж╖ ржХржмрж┐рждрж╛рж╕ржорзВрж╣:**
ЁЯУЭ **"ржнрж╛рж▓рзЛржмрж╛рж╕рж╛рж░ ржЧрж╛ржи"** - ржПржХржЯрж┐ ржкрзНрж░рзЗржорзЗрж░ ржЧрзАрждрж┐ржХржмрж┐рждрж╛
ЁЯУЭ **"рж╕рзНржмржкрзНржирзЗрж░ ржкржерзЗ"** - рж╕рзНржмржкрзНржи ржУ ржЖржХрж╛ржЩрзНржХрзНрж╖рж╛рж░ ржХржмрж┐рждрж╛
ЁЯУЭ **"ржорж╛ржиржмрждрж╛рж░ ржбрж╛ржХ"** - ржорж╛ржиржмрждрж╛рж░ ржЖрж╣рзНржмрж╛ржи
ЁЯУЭ **"ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ ржнржмрж┐рж╖рзНржпрзО"** - ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ ржнржмрж┐рж╖рзНржпрзО ржирж┐ржпрж╝рзЗ

**рж▓рзЗржЦрж╛рж░ ржзрж░ржи:**
тАв ржмрж╛ржВрж▓рж╛ржпрж╝ ржЧржнрзАрж░ ржЖржмрзЗржЧржкрзВрж░рзНржг ржкрзНрж░ржХрж╛рж╢
тАв ржРрждрж┐рж╣рзНржпржмрж╛рж╣рзА ржЫржирзНржжрзЗрж░ рж╕рж╛ржерзЗ ржЖржзрзБржирж┐ржХ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ
тАв ржорж╛ржиржмрждрж╛, ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржУ рж╕рж╛ржорж╛ржЬрж┐ржХ рж╕ржорж╕рзНржпрж╛рж░ ржЙржкрж░ ржлрзЛржХрж╛рж╕
тАв ржорж╛ржиржм ржЙржирзНржиржпрж╝ржирзЗ ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ ржнрзВржорж┐ржХрж╛

**ржЕржирзБржкрзНрж░рзЗрж░ржгрж╛рж░ ржЙрзОрж╕:**
тАв ржЬрзАржмржирзЗрж░ ржЕржнрж┐ржЬрзНржЮрждрж╛ ржУ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзЗржмрж╛
тАв ржЗрж╕рж▓рж╛ржорж┐ржХ ржорзВрж▓рзНржпржмрзЛржз ржУ ржорж╛ржиржмрж┐ржХ ржирзАрждрж┐
тАв рж╕ржорж╛ржЬрзЗ ржкрзНрж░ржпрзБржХрзНрждрж┐рж░ ржкрзНрж░ржнрж╛ржм
тАв ржмрзНржпржХрзНрждрж┐ржЧржд рж╕ржорзНржкрж░рзНржХ ржУ ржЖржмрзЗржЧ

**ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо:** ржмрзНржпржХрзНрждрж┐ржЧржд ржмрзНрж▓ржЧ ржмрж┐ржнрж╛ржЧрзЗ рж╕ржХрж▓ рж╕рзГржЬржирж╢рзАрж▓ ржХрж╛ржЬ ржкрзНрж░ржжрж░рзНрж╢рж┐ржд
**ржнрж╛рж╖рж╛:** ржкрзНрж░ржзрж╛ржиржд ржмрж╛ржВрж▓рж╛, ржХрж┐ржЫрзБ ржЗржВрж░рзЗржЬрж┐ рж░ржЪржирж╛
**ржерж┐ржо:** ржнрж╛рж▓рзЛржмрж╛рж╕рж╛, ржорж╛ржиржмрждрж╛, ржкрзНрж░ржпрзБржХрзНрждрж┐, ржПржмржВ ржЖржзрзНржпрж╛рждрзНржорж┐ржХ ржЙржирзНржирждрж┐

*"ржХржмрж┐рждрж╛ рж╣рзГржжржпрж╝рзЗрж░ ржнрж╛рж╖рж╛, ржЖрж░ ржнрж╛рж╖рж╛ржпрж╝ ржкрзНрж░ржХрж╛рж╢ ржкрж╛ржпрж╝ ржоржирзЗрж░ ржХржерж╛"*`;
    }

    // Family & Personal Information
    if (
      lowerInput.includes('family') ||
      lowerInput.includes('personal') ||
      lowerInput.includes('father') ||
      lowerInput.includes('mother') ||
      lowerInput.includes('ржкрж░рж┐ржмрж╛рж░') ||
      lowerInput.includes('ржмрж╛ржмрж╛') ||
      lowerInput.includes('ржорж╛')
    ) {
      return `ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж **ржкрж╛рж░рж┐ржмрж╛рж░рж┐ржХ ржУ ржмрзНржпржХрзНрждрж┐ржЧржд ржкржЯржнрзВржорж┐:**

**ржкрж░рж┐ржмрж╛рж░рзЗрж░ рж╕ржжрж╕рзНржпржЧржг:**
ЁЯСи **ржмрж╛ржмрж╛:** ржорзЛрж╣рж╛ржорзНржоржж рж░ржХрж┐ржмрзБрж▓ рж╣рж╛рж╕рж╛ржи рж╢рзЗржЦ
ЁЯСй **ржорж╛:** ржорзЛржЫрж╛ржорзНржорзО ржЬрж╕ржирж╛ ржЦрж╛рждрзБржи
ЁЯСз **ржмрзЛржи:** рзз ржЬржи ржЫрзЛржЯ ржмрзЛржи

**ржмрзНржпржХрзНрждрж┐ржЧржд ржорзВрж▓рзНржпржмрзЛржз:**
тШкя╕П **ржзрж░рзНржо:** ржЗрж╕рж▓рж╛ржо (ржорж╛ржиржмрж┐ржХ ржорзВрж▓рзНржпржмрзЛржз рж╕рж╣ржХрж╛рж░рзЗ ржЕржирзБрж╢рзАрж▓ржи)
ЁЯд▓ **ржжрж░рзНрж╢ржи:** "ржорж╛ржиржмрждрж╛рж░ рж╕рзЗржмрж╛, ржЖрж▓рзНрж▓рж╛рж╣рж░ рж╕рзЗржмрж╛"
ЁЯТЭ **ржорзВрж▓ ржорзВрж▓рзНржпржмрзЛржз:** рж╕рждрждрж╛, рж╕рж╣ржорж░рзНржорж┐рждрж╛, рж╢рзНрж░рзЗрж╖рзНржарждрзНржм, рж╕рзЗржмрж╛

**ржмрзНржпржХрзНрждрж┐рждрзНржмрзЗрж░ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп:**
тАв ЁЯОп рж▓ржХрзНрж╖рзНржпржнрж┐рждрзНрждрж┐ржХ ржУ ржжрзГржврж╝ржкрзНрж░рждрж┐ржЬрзНржЮ
тАв ЁЯдЭ рж╕рж╣ржпрзЛржЧрж┐рждрж╛ржорзВрж▓ржХ ржЯрж┐ржо ржкрзНрж▓рзЗржпрж╝рж╛рж░
тАв ЁЯТб рж╕рзГржЬржирж╢рзАрж▓ рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржиржХрж╛рж░рзА
тАв ЁЯУЪ ржЖржЬрзАржмржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА
тАв ЁЯМЯ ржЖрж╢рж╛ржмрж╛ржжрзА ржУ ржЗрждрж┐ржмрж╛ржЪржХ ржоржирзЛржнрж╛ржм

**рж╢ржЦ ржУ ржЖржЧрзНрж░рж╣:**
тАв ЁЯТ╗ ржкрзНрж░ржпрзБржХрзНрждрж┐ ржУ ржЙржжрзНржнрж╛ржмржи
тАв ЁЯУЦ ржЗрж╕рж▓рж╛ржорж┐ржХ рж╕рж╛рж╣рж┐рждрзНржп ржУ ржЯрзЗржХ ржмрзНрж▓ржЧ ржкржбрж╝рж╛
тАв тЬНя╕П ржХржмрж┐рждрж╛ рж▓рзЗржЦрж╛ (ржмрж╛ржВрж▓рж╛ржпрж╝)
тАв ЁЯОо ржжрж╛ржмрж╛ ржУ ржХрзМрж╢рж▓ржЧржд ржЦрзЗрж▓рж╛
тАв ЁЯМ▒ ржХржорж┐ржЙржирж┐ржЯрж┐ ржЙржирзНржиржпрж╝ржи ржкрзНрж░ржХрж▓рзНржк

**ржЬрзАржмржирзЗрж░ ржорзВрж▓ржоржирзНрждрзНрж░:** "ржкрзНрж░ржпрзБржХрзНрждрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕ржмрж╛рж░ ржЬржирзНржп ржкрзГржерж┐ржмрзАржХрзЗ ржЖрж░рзЛ рж╕рзБржирзНржжрж░ ржХрж░рзЗ рждрзЛрж▓рж╛ред"`;
    }

    // Basic Greetings & Welcome
    if (
      lowerInput.includes('hello') ||
      lowerInput.includes('hi') ||
      lowerInput.includes('hey') ||
      lowerInput.includes('assalam') ||
      lowerInput.includes('рж╕рж╛рж▓рж╛ржо') ||
      lowerInput.includes('рж╣рж╛ржЗ') ||
      lowerInput.includes('рж╣рзНржпрж╛рж▓рзЛ')
    ) {
      return `ЁЯС╗ **ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо! рж╕рзНржмрж╛ржЧрждржо!**

ржЖржорж┐ **Ghost AI**, рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ ржбрж┐ржЬрж┐ржЯрж╛рж▓ рж╕рж╣рж╛ржпрж╝ржХ! ЁЯдЦтЬи

**рж░рж┐ржжрзЛржпрж╝рж╛ржи рж╕ржорзНржкрж░рзНржХрзЗ:**
ЁЯОУ ржмржЧрзБржбрж╝рж╛рж░ рззрзм ржмржЫрж░ ржмржпрж╝рж╕рзА ржкрзНрж░рждрж┐ржнрж╛ржмрж╛ржи
ЁЯТ╗ ржУржпрж╝рзЗржм ржбрзЗржнрзЗрж▓ржкрж╛рж░ ржУ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ
ЁЯй╕ BOBDO ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо рж╕рзНрж░рж╖рзНржЯрж╛ (рзмрзорж╣рж╛ржЬрж╛рж░+ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА)
тнР ржирж┐ржЦрзБржБржд ржПржХрж╛ржбрзЗржорж┐ржХ рж░рзЗржХрж░рзНржб (HSC GPA 5.00)

**ржЖржорж╛ржХрзЗ ржпрж╛ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рждрзЗ ржкрж╛рж░рзЗржи:**
ЁЯФН **ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп:** ржкржЯржнрзВржорж┐, рж╢рж┐ржХрзНрж╖рж╛, ржкрж░рж┐ржмрж╛рж░
ЁЯТ╝ **ржкрзЗрж╢рж╛ржжрж╛рж░рж┐рждрзНржм:** ржжржХрзНрж╖рждрж╛, ржкрзНрж░ржЬрзЗржХрзНржЯ, ржЕрж░рзНржЬржи
ЁЯПЖ **рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ:** рзирзл+ ржЯрзЗржХ ржУ ржПржХрж╛ржбрзЗржорж┐ржХ рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ
ЁЯдЭ **рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржХрж╛ржЬ:** ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзЗржмрж╛ ржУ рж╕рж╛ржорж╛ржЬрж┐ржХ ржкрзНрж░ржнрж╛ржм
тЬНя╕П **рж╕рзГржЬржирж╢рзАрж▓ ржХрж╛ржЬ:** ржХржмрж┐рждрж╛, ржмрзНрж▓ржЧ, ржЧржмрзЗрж╖ржгрж╛
ЁЯУЮ **ржпрзЛржЧрж╛ржпрзЛржЧ:** ржХрзАржнрж╛ржмрзЗ рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░ржмрзЗржи
ЁЯОп **ржнржмрж┐рж╖рзНржпрзО ржкрж░рж┐ржХрж▓рзНржкржирж╛:** рж▓ржХрзНрж╖рзНржп ржУ ржХрзНржпрж╛рж░рж┐ржпрж╝рж╛рж░ ржЖржХрж╛ржЩрзНржХрзНрж╖рж╛

**ржЬржиржкрзНрж░рж┐ржпрж╝ ржкрзНрж░рж╢рзНржи:**
тАв "рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕ржорзНржкрж░рзНржХрзЗ ржмрж▓рзБржи"
тАв "рждрж╛рж░ ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд ржжржХрзНрж╖рждрж╛ ржХрзА?"
тАв "ржХрзАржнрж╛ржмрзЗ рждрж╛рж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░ржм?"
тАв "рждрж┐ржирж┐ ржХрзА ржзрж░ржирзЗрж░ рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржХрж╛ржЬ ржХрж░рзЗржи?"

**ЁЯМЯ рж╕рж╛рж╣рж╛ржпрзНржпрзЗрж░ ржЬржирзНржп ржкрзНрж░рж╕рзНрждрзБржд! ржХрзА ржЬрж╛ржирждрзЗ ржЪрж╛ржи?**`;
    }

    // Thank You Response
    if (
      lowerInput.includes('thank') ||
      lowerInput.includes('thanks') ||
      lowerInput.includes('jazak') ||
      lowerInput.includes('ржзржирзНржпржмрж╛ржж') ||
      lowerInput.includes('рж╢рзБржХрж░рж┐ржпрж╝рж╛')
    ) {
      return `ЁЯЩП **ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржо!**

**ржЬрж╛ржЬрж╛ржХрж╛рж▓рзНрж▓рж╛рж╣рзБ ржЦржЗрж░рж╛ржи** (ржЖрж▓рзНрж▓рж╛рж╣ ржЖржкржирж╛ржХрзЗ ржЙрждрзНрждржо ржкрзНрж░рждрж┐ржжрж╛ржи ржжрж┐ржи)

**ржорзЛрж╣рж╛ржорзНржоржж рж░рж┐ржжрзЛржпрж╝рж╛ржи ржорж╛рж╣ржорзБржж ржЬрж┐рж╕рж╛ржи** рж╕ржорзНржкрж░рзНржХрзЗ рждржерзНржп рж╢рзЗржпрж╝рж╛рж░ ржХрж░рждрзЗ ржкрзЗрж░рзЗ ржЖржиржирзНржжрж┐ржд!

**ржЖрж░рзЛ рждржерзНржпрзЗрж░ ржЬржирзНржп:**
тАв ЁЯУз рж╕рж░рж╛рж╕рж░рж┐ ржЗржорзЗржЗрж▓: ridoan.zisan@gmail.com
тАв ЁЯУЮ ржлрзЛржи/рж╣рзЛржпрж╝рж╛ржЯрж╕ржЕрзНржпрж╛ржк: +рзорзорзжрззрзнрззрзирзлрзирзлрзпрззрзж
тАв ЁЯФЧ рж▓рж┐ржВржХржбржЗржи: https://linkedin.com/in/ridoan2007
тАв ЁЯМР ржкрзЛрж░рзНржЯржлрж▓рж┐ржУ: рж╕ржорзНржкрзВрж░рзНржг ржкрзНрж░ржЬрзЗржХрзНржЯ ржкрзНрж░ржжрж░рзНрж╢ржирзА

**ржоржирзЗ рж░рж╛ржЦржмрзЗржи:**
*"рж╕рзЗрж░рж╛ ржорж╛ржирзБрж╖ рждрж╛рж░рж╛ржЗ ржпрж╛рж░рж╛ ржЕржирзНржпржжрзЗрж░ ржЙржкржХрж╛рж░ ржХрж░рзЗ"* - ржПржЯрж╛ржЗ рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ ржкржержкрзНрж░ржжрж░рзНрж╢ржХ ржирзАрждрж┐!

**ржЖрж░рзЛ ржпрж╛ ржЬрж╛ржирждрзЗ ржкрж╛рж░рзЗржи:**
тЬЕ рждрж╛рж░ ржкрзНрж░ржЬрзЗржХрзНржЯ ржУ ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд ржХрж╛ржЬ  
тЬЕ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзЗржмрж╛ ржУ рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржХрж╛рж░рзНржпржХрзНрж░ржо
тЬЕ рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржкржЯржнрзВржорж┐ ржУ ржЕрж░рзНржЬржи
тЬЕ ржнржмрж┐рж╖рзНржпрзО рж▓ржХрзНрж╖рзНржп ржУ рж╕рж╣ржпрзЛржЧрж┐рждрж╛рж░ рж╕рзБржпрзЛржЧ

**ржпрзЛржЧрж╛ржпрзЛржЧ рж░рж╛ржЦрзБржи ржУ ржЖрж▓рзНрж▓рж╛рж╣ ржЖржкржирж╛ржХрзЗ ржмрж░ржХржд ржжрж┐ржи!** ЁЯд▓тЬи`;
    }

    // Default response for unmatched queries
    return `ржзржирзНржпржмрж╛ржж ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп! ржЖржорж┐ Ghost AI, рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ рж╕ржм рждржерзНржп ржЬрж╛ржирж┐ред 

ржЖржорж╛ржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи:
тАв рждрж╛рж░ рж╢рж┐ржХрзНрж╖рж╛ ржУ ржЕрж░рзНржЬржи
тАв ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд ржжржХрзНрж╖рждрж╛ ржУ ржкрзНрж░ржЬрзЗржХрзНржЯ
тАв рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржХрж╛ржЬ ржУ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзЗржмрж╛
тАв ржпрзЛржЧрж╛ржпрзЛржЧрзЗрж░ рждржерзНржп
тАв ржнржмрж┐рж╖рзНржпрзО рж▓ржХрзНрж╖рзНржп ржУ ржЖржХрж╛ржЩрзНржХрзНрж╖рж╛
тАв ржХржмрж┐рждрж╛ ржУ рж╕рзГржЬржирж╢рзАрж▓ ржХрж╛ржЬ
тАв ржЧржмрзЗрж╖ржгрж╛ ржУ ржПржХрж╛ржбрзЗржорж┐ржХ ржЕржмржжрж╛ржи

ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи: "рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕ржорзНржкрж░рзНржХрзЗ ржмрж▓рзБржи" ржмрж╛ "ржХрзАржнрж╛ржмрзЗ рждрж╛рж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░ржм?"`;
  };

  useEffect(() => {
    if (isChatOpen) {
      inputRef.current?.focus();
      setUnreadCount(0);
    }
  }, [isChatOpen]);

  useEffect(() => {
    scrollToBottom();
  }, [messages, isLoading]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim() || isLoading) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      content: input.trim(),
      role: 'user',
      timestamp: new Date(),
    };

    setMessages((prev) => [...prev, userMessage]);
    setInput('');
    setIsLoading(true);

    // Simulate typing delay for better UX
    setTimeout(() => {
      const response = getConstantReply(userMessage.content);

      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        content: response,
        role: 'assistant',
        timestamp: new Date(),
      };

      setMessages((prev) => [...prev, aiMessage]);
      setIsLoading(false);

      // Add unread count if chat is closed
      if (!isChatOpen) {
        setUnreadCount(prev => prev + 1);
      }
    }, 1000 + Math.random() * 1000);
  };

  const toggleChat = () => {
    setIsChatOpen(!isChatOpen);
    setUnreadCount(0);
  };

  // Enhanced Ghost Icon with magical effects
  const GhostIcon = ({ size = 24, className = '', animated = true }) => (
    <div className={`relative ${animated ? 'animate-float' : ''} ${className}`}>
      <svg width={size} height={size} viewBox="0 0 24 24" className="drop-shadow-xl">
        <defs>
          <linearGradient id="ghostGradient" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" stopColor="#8B5CF6" stopOpacity="1" />
            <stop offset="50%" stopColor="#A855F7" stopOpacity="0.9" />
            <stop offset="100%" stopColor="#C084FC" stopOpacity="0.8" />
          </linearGradient>
          <filter id="ghostGlow">
            <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
            <feMerge> 
              <feMergeNode in="coloredBlur"/>
              <feMergeNode in="SourceGraphic"/>
            </feMerge>
          </filter>
        </defs>
        
        {/* Ghost body with glow */}
        <path 
          d="M12 2C8.2 2 5.8 4.8 5.8 8.2v8.4c0 1.2 0.6 2.3 1.6 2.9l1.2-1.8 1.8 1.8 1.8-1.8 1.8 1.8 1.2-1.8c1-0.6 1.6-1.7 1.6-2.9V8.2C18.2 4.8 15.8 2 12 2z" 
          fill="url(#ghostGradient)"
          filter="url(#ghostGlow)"
          className="animate-pulse"
        />
        
        {/* Eyes with shine */}
        <circle cx="9" cy="9" r="1.8" fill="white" />
        <circle cx="15" cy="9" r="1.8" fill="white" />
        <circle cx="9" cy="9" r="1.2" fill="#1F2937" />
        <circle cx="15" cy="9" r="1.2" fill="#1F2937" />
        <circle cx="9.5" cy="8.5" r="0.3" fill="white" />
        <circle cx="15.5" cy="8.5" r="0.3" fill="white" />
        
        {/* Mouth */}
        <ellipse cx="12" cy="13.5" rx="2" ry="1.5" fill="white" />
        <ellipse cx="12" cy="13.5" rx="1.5" ry="1" fill="#1F2937" />
      </svg>
      
      {/* Magical sparkles */}
      <div className="absolute -top-2 -right-2 text-yellow-400 animate-pulse">
        <Sparkles size={14} />
      </div>
      <div className="absolute -bottom-1 -left-1 text-purple-400 animate-bounce" style={{animationDelay: '0.5s'}}>
        <Sparkles size={10} />
      </div>
    </div>
  );

  return (
    <div className="fixed bottom-4 right-4 flex flex-col items-end gap-3 z-[9999]" ref={containerRef}>
      {/* Enhanced Floating Action Button */}
      <div className="relative">
        <button
          onClick={toggleChat}
          className="group relative bg-gradient-to-br from-purple-600 via-purple-700 to-indigo-800 hover:from-purple-700 hover:via-purple-800 hover:to-indigo-900 text-white p-5 rounded-full shadow-2xl hover:shadow-purple-500/40 transition-all duration-500 transform hover:scale-110 active:scale-95 border-2 border-purple-400/30 backdrop-blur-sm"
          title="Ghost AI ржПрж░ рж╕рж╛ржерзЗ ржЪрзНржпрж╛ржЯ ржХрж░рзБржи"
          style={{
            boxShadow: '0 10px 40px rgba(139, 92, 246, 0.5), 0 0 30px rgba(168, 85, 247, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.2)',
          }}
        >
          <GhostIcon size={32} />
          
          {/* Notification Badge */}
          {unreadCount > 0 && (
            <div className="absolute -top-3 -right-3 bg-gradient-to-r from-red-500 to-pink-500 text-white text-xs rounded-full w-7 h-7 flex items-center justify-center font-bold animate-bounce shadow-lg">
              {unreadCount > 9 ? '9+' : unreadCount}
            </div>
          )}

          {/* Animated rings */}
          <div className="absolute inset-0 rounded-full bg-purple-400 opacity-20 animate-ping"></div>
          <div className="absolute inset-0 rounded-full bg-purple-300 opacity-10 animate-ping" style={{animationDelay: '1s'}}></div>
        </button>

        {/* Enhanced Tooltip */}
        <div className="absolute bottom-full right-0 mb-3 bg-gray-900 text-white text-sm px-4 py-3 rounded-xl opacity-0 group-hover:opacity-100 transition-all duration-300 whitespace-nowrap shadow-xl backdrop-blur-sm border border-gray-700">
          <div className="flex items-center gap-2">
            <GhostIcon size={16} animated={false} />
            <span>рж░рж┐ржжрзЛржпрж╝рж╛ржи рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи! ЁЯС╗</span>
          </div>
          <div className="absolute top-full right-4 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900"></div>
        </div>
      </div>

      {/* Enhanced Chat Window */}
      {isChatOpen && (
        <div className="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl border border-purple-200/50 flex flex-col w-96 max-w-[calc(100vw-2rem)] h-[32rem] max-h-[calc(100vh-8rem)] transition-all duration-500 animate-scale-in">
          
          {/* Chat Header */}
          <div className="bg-gradient-to-r from-purple-600 via-purple-700 to-indigo-800 text-white p-5 rounded-t-3xl flex justify-between items-center border-b border-purple-500/30 backdrop-blur-sm">
            <div className="flex items-center gap-4">
              <div className="relative">
                <GhostIcon size={36} className="text-white" animated={false} />
                <div className="absolute -bottom-1 -right-1 w-4 h-4 bg-green-400 rounded-full border-2 border-white animate-pulse"></div>
              </div>
              <div>
                <h3 className="font-bold text-xl flex items-center gap-2">
                  Ghost AI
                  <Bot size={20} className="text-purple-200" />
                </h3>
                <p className="text-purple-200 text-sm">рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ ржбрж┐ржЬрж┐ржЯрж╛рж▓ рж╕рж╣рж╛ржпрж╝ржХ</p>
              </div>
            </div>
            
            <button
              onClick={() => setIsChatOpen(false)}
              className="text-purple-200 hover:text-white transition-colors p-2 rounded-full hover:bg-purple-600/50 backdrop-blur-sm"
              title="ржЪрзНржпрж╛ржЯ ржмржирзНржз ржХрж░рзБржи"
            >
              <X size={20} />
            </button>
          </div>

          {/* Messages Container */}
          <div className="flex-1 overflow-y-auto p-5 space-y-4 bg-gradient-to-b from-purple-50/50 to-white/80 backdrop-blur-sm">
            {messages.length === 0 && (
              <div className="text-center py-8">
                <div className="mb-6">
                  <GhostIcon size={80} className="mx-auto text-purple-600" />
                </div>
                <h4 className="text-2xl font-bold text-gray-800 mb-3">
                  ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо! ЁЯСЛ
                </h4>
                <p className="text-gray-600 mb-6 leading-relaxed">
                  ржЖржорж┐ Ghost AI, ржПржЦрж╛ржирзЗ ржЖржЫрж┐ ржЖржкржирж╛ржХрзЗ рж╕ржм ржХрж┐ржЫрзБ ржмрж▓рж╛рж░ ржЬржирзНржп
                  <br /><strong className="text-purple-700">ржорзЛрж╣рж╛ржорзНржоржж рж░рж┐ржжрзЛржпрж╝рж╛ржи ржорж╛рж╣ржорзБржж ржЬрж┐рж╕рж╛ржи</strong> рж╕ржорзНржкрж░рзНржХрзЗ!
                </p>
                <div className="flex flex-wrap gap-2 justify-center text-xs">
                  <span className="bg-purple-100 text-purple-700 px-3 py-2 rounded-full border border-purple-200">рж╢рж┐ржХрзНрж╖рж╛</span>
                  <span className="bg-blue-100 text-blue-700 px-3 py-2 rounded-full border border-blue-200">ржкрзНрж░ржЬрзЗржХрзНржЯ</span>
                  <span className="bg-green-100 text-green-700 px-3 py-2 rounded-full border border-green-200">ржжржХрзНрж╖рждрж╛</span>
                  <span className="bg-red-100 text-red-700 px-3 py-2 rounded-full border border-red-200">ржпрзЛржЧрж╛ржпрзЛржЧ</span>
                </div>
              </div>
            )}

            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex items-start gap-3 ${
                  message.role === 'user' ? 'flex-row-reverse' : ''
                }`}
              >
                <div
                  className={`w-12 h-12 rounded-full flex items-center justify-center shadow-lg ${
                    message.role === 'user'
                      ? 'bg-gradient-to-br from-blue-500 to-blue-600'
                      : 'bg-gradient-to-br from-purple-500 to-purple-600 border-2 border-purple-300'
                  }`}
                >
                  {message.role === 'user' ? (
                    <User className="w-6 h-6 text-white" />
                  ) : (
                    <GhostIcon size={24} className="text-white" animated={false} />
                  )}
                </div>
                
                <div
                  className={`rounded-2xl px-5 py-4 max-w-[80%] shadow-lg backdrop-blur-sm ${
                    message.role === 'user'
                      ? 'bg-gradient-to-br from-blue-500 to-blue-600 text-white rounded-tr-sm border border-blue-400'
                      : 'bg-white/90 border border-purple-200 text-gray-800 rounded-tl-sm'
                  }`}
                >
                  <div className="text-sm leading-relaxed whitespace-pre-wrap font-medium">
                    {message.content}
                  </div>
                  <div className={`text-xs mt-3 ${
                    message.role === 'user' ? 'text-blue-100' : 'text-gray-500'
                  }`}>
                    {format(message.timestamp, 'h:mm a')}
                  </div>
                </div>
              </div>
            ))}

            {isLoading && (
              <div className="flex items-start gap-3">
                <div className="w-12 h-12 rounded-full bg-gradient-to-br from-purple-500 to-purple-600 flex items-center justify-center shadow-lg">
                  <GhostIcon size={24} className="text-white" animated={false} />
                </div>
                <div className="bg-white/90 border border-purple-200 rounded-2xl rounded-tl-sm px-5 py-4 shadow-lg backdrop-blur-sm">
                  <div className="flex gap-2">
                    <div className="w-3 h-3 bg-purple-400 rounded-full animate-bounce"></div>
                    <div className="w-3 h-3 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                    <div className="w-3 h-3 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.4s' }}></div>
                  </div>
                </div>
              </div>
            )}

            <div ref={messagesEndRef} />
          </div>

          {/* Enhanced Input Form */}
          <div className="border-t border-purple-200 p-5 bg-white/90 rounded-b-3xl backdrop-blur-sm">
            <form onSubmit={handleSubmit} className="flex gap-3">
              <input
                ref={inputRef}
                type="text"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                placeholder="рж░рж┐ржжрзЛржпрж╝рж╛ржи рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи... ЁЯС╗"
                disabled={isLoading}
                className="flex-1 rounded-xl border border-purple-300 px-4 py-3 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed placeholder-gray-500 text-sm bg-white/80 backdrop-blur-sm shadow-inner"
              />
              <button
                type="submit"
                disabled={!input.trim() || isLoading}
                className="bg-gradient-to-br from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white rounded-xl px-5 py-3 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 shadow-lg hover:shadow-purple-500/30 group backdrop-blur-sm"
              >
                <Send className="w-5 h-5 group-hover:translate-x-1 transition-transform" />
              </button>
            </form>
            
            {/* Quick Suggestions */}
            <div className="flex gap-2 mt-4 flex-wrap">
              {[
                { label: 'ржкрзНрж░ржЬрзЗржХрзНржЯ', query: 'рж░рж┐ржжрзЛржпрж╝рж╛ржирзЗрж░ ржкрзНрж░ржЬрзЗржХрзНржЯ рж╕ржорзНржкрж░рзНржХрзЗ ржмрж▓рзБржи' },
                { label: 'ржжржХрзНрж╖рждрж╛', query: 'рждрж╛рж░ ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд ржжржХрзНрж╖рждрж╛ ржХрзА' },
                { label: 'ржпрзЛржЧрж╛ржпрзЛржЧ', query: 'ржХрзАржнрж╛ржмрзЗ рждрж╛рж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░ржм' },
                { label: 'рж╢рж┐ржХрзНрж╖рж╛', query: 'рждрж╛рж░ рж╢рж┐ржХрзНрж╖рж╛ржЧржд ржкржЯржнрзВржорж┐' }
              ].map((suggestion) => (
                <button
                  key={suggestion.label}
                  onClick={() => setInput(suggestion.query)}
                  className="text-xs bg-purple-100 hover:bg-purple-200 text-purple-700 px-3 py-2 rounded-full transition-all duration-200 border border-purple-300 hover:border-purple-400 shadow-sm backdrop-blur-sm"
                >
                  {suggestion.label}
                </button>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Custom Animations */}
      <style>{`
        @keyframes float {
          0%, 100% { transform: translateY(0px) rotate(0deg); }
          25% { transform: translateY(-8px) rotate(2deg); }
          50% { transform: translateY(-4px) rotate(0deg); }
          75% { transform: translateY(-10px) rotate(-2deg); }
        }
        .animate-float {
          animation: float 4s ease-in-out infinite;
        }
        
        @keyframes scale-in {
          0% { transform: scale(0.9) translateY(20px); opacity: 0; }
          100% { transform: scale(1) translateY(0); opacity: 1; }
        }
        .animate-scale-in {
          animation: scale-in 0.3s ease-out;
        }
        
        /* Enhanced scrollbar */
        .overflow-y-auto::-webkit-scrollbar {
          width: 6px;
        }
        .overflow-y-auto::-webkit-scrollbar-track {
          background: linear-gradient(to bottom, #f8fafc, #e2e8f0);
          border-radius: 6px;
        }
        .overflow-y-auto::-webkit-scrollbar-thumb {
          background: linear-gradient(to bottom, #a855f7, #9333ea);
          border-radius: 6px;
          border: 1px solid #e2e8f0;
        }
        .overflow-y-auto::-webkit-scrollbar-thumb:hover {
          background: linear-gradient(to bottom, #9333ea, #7c3aed);
        }
      `}</style>
    </div>
  );
};

export default LiveChat;
