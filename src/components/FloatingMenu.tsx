
import React, { useState, useRef, useEffect } from 'react';
import { Send, User, X, MessageCircle } from 'lucide-react';
import { format } from 'date-fns';

interface Message {
  id: string;
  content: string;
  role: 'user' | 'assistant';
  timestamp: Date;
}

export const LiveChat = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [isChatOpen, setIsChatOpen] = useState(false);
  const inputRef = useRef<HTMLInputElement>(null);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const containerRef = useRef<HTMLDivElement>(null);

  // Enhanced constant replies with comprehensive website information
  const getConstantReply = (userInput: string): string | null => {
    const lowerInput = userInput.toLowerCase();

    // Website information
    if (
      lowerInput.includes('ржзрзБржиржЯ') ||
      lowerInput.includes('dhunat') ||
      lowerInput.includes('ржПржк') ||
      lowerInput.includes('app') ||
      lowerInput.includes('ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ') ||
      lowerInput.includes('website')
    ) {
      return `ржзрзБржиржЯ.ржЕрзНржпрж╛ржк рж╕ржорзНржкрж░рзНржХрзЗ рждржерзНржп:
      \nЁЯПШя╕П ржзрзБржиржЯ ржЙржкржЬрзЗрж▓рж╛рж░ ржЬржирзНржп рж╕рзНржерж╛ржирзАржпрж╝ рж╕рзЗржмрж╛ ржбрж┐рж░рзЗржХрзНржЯрж░рж┐
      \nЁЯУ▒ рзйрзл+ ржмрж┐ржнрж┐ржирзНржи ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐рждрзЗ рж╕рзЗржмрж╛ ржкрзНрж░ржжрж╛ржиржХрж╛рж░рзА
      \nЁЯФН рж╕рж╣ржЬ ржЦрзЛржБржЬ ржУ ржлрж┐рж▓рзНржЯрж╛рж░ рж╕рзБржмрж┐ржзрж╛
      \nЁЯУЮ рж╕рж░рж╛рж╕рж░рж┐ ржпрзЛржЧрж╛ржпрзЛржЧ рждржерзНржп
      \nЁЯЧ║я╕П ржорзНржпрж╛ржк ржУ ржарж┐ржХрж╛ржирж╛ рж╕рж╣ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд рждржерзНржп
      \n\nржЙржкрж▓ржмрзНржз рж╕рзЗржмрж╛рж╕ржорзВрж╣: ржбрж╛ржХрзНрждрж╛рж░, рж╣рж╛рж╕ржкрж╛рждрж╛рж▓, рж░ржХрзНрждржжрж╛рждрж╛, ржЧрж╛ржбрж╝рж┐ ржнрж╛ржбрж╝рж╛, ржерж╛ржирж╛, ржЖржЗржиржЬрзАржмрзА ржПржмржВ ржЖрж░ржУ ржЕржирзЗржХ!`;
    }

    // Categories information
    if (
      lowerInput.includes('ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐') ||
      lowerInput.includes('category') ||
      lowerInput.includes('рж╕рзЗржмрж╛') ||
      lowerInput.includes('service')
    ) {
      return `ржзрзБржиржЯ.ржЕрзНржпрж╛ржкрзЗ ржЙржкрж▓ржмрзНржз ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐рж╕ржорзВрж╣:
      \nЁЯПе ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛: ржбрж╛ржХрзНрждрж╛рж░, рж╣рж╛рж╕ржкрж╛рждрж╛рж▓, ржбрж╛ржпрж╝рж╛ржЧржирж╕рзНржЯрж┐ржХ рж╕рзЗржирзНржЯрж╛рж░
      \nЁЯй╕ ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛: рж░ржХрзНрждржжрж╛рждрж╛, ржерж╛ржирж╛, ржЖржЗржиржЬрзАржмрзА
      \nЁЯЪЧ ржкрж░рж┐ржмрж╣ржи: ржЧрж╛ржбрж╝рж┐ ржнрж╛ржбрж╝рж╛, ржмрж╛рж╕ рж╕рзВржЪрж┐, ржЯрзНрж░рзЗржи рж╕рзВржЪрж┐
      \nЁЯПл рж╢рж┐ржХрзНрж╖рж╛: рж╢рж┐ржХрзНрж╖ржХ, рж╢рж┐ржХрзНрж╖рж╛ ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи, ржЯрзНрж░рзЗржирж┐ржВ рж╕рзЗржирзНржЯрж╛рж░
      \nЁЯТ╝ ржЪрж╛ржХрж░рж┐ ржУ ржмрзНржпржмрж╕рж╛: ржЪрж╛ржХрж░рж┐, ржЙржжрзНржпрзЛржХрзНрждрж╛
      \nЁЯПа ржжрзИржиржирзНржжрж┐ржи: ржмрж╛ржЬрж╛рж░, ржмрж╛рж╕рж╛ ржнрж╛ржбрж╝рж╛, рж╣рзЛржЯрзЗрж▓
      \nЁЯПЫя╕П рж╕рж░ржХрж╛рж░рж┐: ржкрзМрж░рж╕ржнрж╛, ржмрж┐ржжрзНржпрзБрзО ржЕржлрж┐рж╕
      \nЁЯПж ржмрзНржпрж╛ржВржХрж┐ржВ: ржмрзНржпрж╛ржВржХ ржУ ржмрзАржорж╛, ржЧрзНржпрж╛рж╕ рж╕рзНржЯрзЗрж╢ржи
      \nЁЯОп ржЖрж░ржУ рзирзж+ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ ржЙржкрж▓ржмрзНржз!`;
    }

    // Medical services
    if (
      lowerInput.includes('ржбрж╛ржХрзНрждрж╛рж░') ||
      lowerInput.includes('doctor') ||
      lowerInput.includes('ржЪрж┐ржХрж┐рзОрж╕ржХ') ||
      lowerInput.includes('рж╣рж╛рж╕ржкрж╛рждрж╛рж▓') ||
      lowerInput.includes('hospital')
    ) {
      return `ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛:
      \nЁЯСитАНтЪХя╕П ржбрж╛ржХрзНрждрж╛рж░: ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ ржЪрж┐ржХрж┐рзОрж╕ржХ рждрж╛рж▓рж┐ржХрж╛
      \nЁЯПе рж╣рж╛рж╕ржкрж╛рждрж╛рж▓: рж╕рзНржерж╛ржирзАржпрж╝ рж╣рж╛рж╕ржкрж╛рждрж╛рж▓ ржУ ржХрзНрж▓рж┐ржирж┐ржХ
      \nЁЯФм ржбрж╛ржпрж╝рж╛ржЧржирж╕рзНржЯрж┐ржХ: ржкрзНржпрж╛ржерж▓ржЬрж┐ ржУ ржЗржорзЗржЬрж┐ржВ рж╕рзЗржирзНржЯрж╛рж░
      \n\nржлрж┐рж▓рзНржЯрж╛рж░ рж╕рзБржмрж┐ржзрж╛:
      \n- ржЪрж┐ржХрж┐рзОрж╕ржХрзЗрж░ ржмрж┐рж╢рзЗрж╖рждрзНржм ржЕржирзБржпрж╛ржпрж╝рзА
      \n- ржПрж▓рж╛ржХрж╛ ржЕржирзБржпрж╛ржпрж╝рзА
      \n- ржкрж░рж╛ржорж░рзНрж╢ ржлрж┐ ржЕржирзБржпрж╛ржпрж╝рзА
      \n- рж╕ржоржпрж╝рж╕рзВржЪрж┐ ржЕржирзБржпрж╛ржпрж╝рзА`;
    }

    // Blood donation
    if (
      lowerInput.includes('рж░ржХрзНржд') ||
      lowerInput.includes('blood') ||
      lowerInput.includes('рж░ржХрзНрждржжрж╛рждрж╛') ||
      lowerInput.includes('donor')
    ) {
      return `рж░ржХрзНрждржжрж╛ржи рж╕рзЗржмрж╛:
      \nЁЯй╕ рж╕ржХрж▓ рж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржкрзЗрж░ ржжрж╛рждрж╛ ржЙржкрж▓ржмрзНржз
      \nЁЯУ▒ ржЬрж░рзБрж░рж┐ ржпрзЛржЧрж╛ржпрзЛржЧ ржиржорзНржмрж░
      \nЁЯУН ржПрж▓рж╛ржХрж╛ржнрж┐рждрзНрждрж┐ржХ рж░ржХрзНрждржжрж╛рждрж╛ ржЦрзЛржБржЬ
      \nтП░ рзирз┤/рзн ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛
      \n\nрж░ржХрзНрждрзЗрж░ ржЧрзНрж░рзБржк: A+, A-, B+, B-, AB+, AB-, O+, O-
      \n\nржЬрж░рзБрж░рж┐ ржкрзНрж░ржпрж╝рзЛржЬржирзЗ рж╕рж░рж╛рж╕рж░рж┐ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи!`;
    }

    // Transportation
    if (
      lowerInput.includes('ржЧрж╛ржбрж╝рж┐') ||
      lowerInput.includes('car') ||
      lowerInput.includes('ржнрж╛ржбрж╝рж╛') ||
      lowerInput.includes('rent') ||
      lowerInput.includes('ржмрж╛рж╕') ||
      lowerInput.includes('bus')
    ) {
      return `ржкрж░рж┐ржмрж╣ржи рж╕рзЗржмрж╛:
      \nЁЯЪЧ ржЧрж╛ржбрж╝рж┐ ржнрж╛ржбрж╝рж╛: ржкрзНрж░рж╛ржЗржнрзЗржЯ ржХрж╛рж░, ржорж╛ржЗржХрзНрж░рзЛржмрж╛рж╕
      \nЁЯЪМ ржмрж╛рж╕ рж╕рзВржЪрж┐: ржзрзБржиржЯ ржерзЗржХрзЗ рж╕ржХрж▓ ржЧржирзНрждржмрзНржп
      \nЁЯЪВ ржЯрзНрж░рзЗржи рж╕рзВржЪрж┐: рж░рзЗрж▓ рж╕ржоржпрж╝рж╕рзВржЪрж┐
      \nЁЯПНя╕П ржорзЛржЯрж░рж╕рж╛ржЗржХрзЗрж▓ ржнрж╛ржбрж╝рж╛
      \n\nржмрж┐рж╢рзЗрж╖ рж╕рзБржмрж┐ржзрж╛:
      \n- ржжрзИржирж┐ржХ/ржорж╛рж╕рж┐ржХ ржнрж╛ржбрж╝рж╛
      \n- AC/Non-AC ржЧрж╛ржбрж╝рж┐
      \n- ржЕржнрж┐ржЬрзНржЮ ржЪрж╛рж▓ржХ
      \n- ржирж┐рж░рж╛ржкржж ржпрж╛рждрзНрж░рж╛`;
    }

    // Education
    if (
      lowerInput.includes('рж╢рж┐ржХрзНрж╖рж╛') ||
      lowerInput.includes('education') ||
      lowerInput.includes('рж╕рзНржХрзБрж▓') ||
      lowerInput.includes('school') ||
      lowerInput.includes('ржХрж▓рзЗржЬ') ||
      lowerInput.includes('college')
    ) {
      return `рж╢рж┐ржХрзНрж╖рж╛ рж╕рзЗржмрж╛:
      \nЁЯПл рж╢рж┐ржХрзНрж╖рж╛ ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи: рж╕рзНржХрзБрж▓, ржХрж▓рзЗржЬ, ржорж╛ржжрзНрж░рж╛рж╕рж╛
      \nЁЯСитАНЁЯПл рж╢рж┐ржХрзНрж╖ржХ: ржмрж┐рж╖ржпрж╝ржнрж┐рждрзНрждрж┐ржХ рж╢рж┐ржХрзНрж╖ржХ рждрж╛рж▓рж┐ржХрж╛
      \nЁЯУЪ ржЯрзНрж░рзЗржирж┐ржВ рж╕рзЗржирзНржЯрж╛рж░: ржХржорзНржкрж┐ржЙржЯрж╛рж░, ржнрж╛рж╖рж╛ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг
      \nЁЯОУ ржХрзЛржЪрж┐ржВ рж╕рзЗржирзНржЯрж╛рж░
      \n\nрж╢рж┐ржХрзНрж╖рж╛рж░ рж╕рзНрждрж░:
      \n- ржкрзНрж░рж╛ржержорж┐ржХ рж╢рж┐ржХрзНрж╖рж╛
      \n- ржорж╛ржзрзНржпржорж┐ржХ рж╢рж┐ржХрзНрж╖рж╛
      \n- ржЙржЪрзНржЪ ржорж╛ржзрзНржпржорж┐ржХ
      \n- ржХрж╛рж░рж┐ржЧрж░рж┐ рж╢рж┐ржХрзНрж╖рж╛`;
    }

    // Jobs
    if (
      lowerInput.includes('ржЪрж╛ржХрж░рж┐') ||
      lowerInput.includes('job') ||
      lowerInput.includes('ржХрж╛ржЬ') ||
      lowerInput.includes('work')
    ) {
      return `ржЪрж╛ржХрж░рж┐рж░ рж╕рзБржпрзЛржЧ:
      \nЁЯТ╝ рж╕рзНржерж╛ржирзАржпрж╝ ржЪрж╛ржХрж░рж┐рж░ ржмрж┐ржЬрзНржЮржкрзНрждрж┐
      \nЁЯПв рж╕рж░ржХрж╛рж░рж┐ ржЪрж╛ржХрж░рж┐
      \nЁЯПк ржкрзНрж░рж╛ржЗржнрзЗржЯ ржХрзЛржорзНржкрж╛ржирж┐
      \nЁЯПн ржХрж╛рж░ржЦрж╛ржирж╛ ржУ ржЙрзОржкрж╛ржжржи
      \nЁЯС╖ ржжрж┐ржиржоржЬрзБрж░
      \n\nржЪрж╛ржХрж░рж┐рж░ ржХрзНрж╖рзЗрждрзНрж░:
      \n- ржЕржлрж┐рж╕ рж╕рж╣рж╛ржпрж╝ржХ
      \n- ржмрж┐ржХрзНрж░ржпрж╝ ржкрзНрж░рждрж┐ржирж┐ржзрж┐
      \n- ржХрж╛рж░рж┐ржЧрж░рж┐ ржХрж╛ржЬ
      \n- ржЧрзГрж╣рж╕рзНржерж╛рж▓рж┐ ржХрж╛ржЬ`;
    }

    // Government services
    if (
      lowerInput.includes('рж╕рж░ржХрж╛рж░рж┐') ||
      lowerInput.includes('government') ||
      lowerInput.includes('ржкрзМрж░рж╕ржнрж╛') ||
      lowerInput.includes('municipality') ||
      lowerInput.includes('ржерж╛ржирж╛') ||
      lowerInput.includes('police')
    ) {
      return `рж╕рж░ржХрж╛рж░рж┐ рж╕рзЗржмрж╛:
      \nЁЯПЫя╕П ржкрзМрж░рж╕ржнрж╛: ржирж╛ржЧрж░рж┐ржХ рж╕рзЗржмрж╛
      \nЁЯСо ржерж╛ржирж╛: ржЖржЗржи рж╢рзГржЩрзНржЦрж▓рж╛
      \nтЪб ржмрж┐ржжрзНржпрзБрзО ржЕржлрж┐рж╕: ржмрж┐ржжрзНржпрзБрзО рж╕ржВржпрзЛржЧ ржУ ржмрж┐рж▓
      \nЁЯПж ржмрзНржпрж╛ржВржХ: рж╕рж░ржХрж╛рж░рж┐ ржмрзНржпрж╛ржВржХ рж╢рж╛ржЦрж╛
      \nЁЯУЛ ржмрж┐ржнрж┐ржирзНржи рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ рж╕рзЗржмрж╛
      \n\nржЬрж░рзБрж░рж┐ ржиржорзНржмрж░:
      \n- ржЬрж╛рждрзАржпрж╝ ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛: рзпрзпрзп
      \n- ржлрж╛ржпрж╝рж╛рж░ рж╕рж╛рж░рзНржнрж┐рж╕: рззрзпрзп
      \n- ржкрзБрж▓рж┐рж╢: рззрзжрзж`;
    }

    // Shopping and business
    if (
      lowerInput.includes('ржХрзЗржирж╛ржмрзЗржЪрж╛') ||
      lowerInput.includes('shop') ||
      lowerInput.includes('ржмрж╛ржЬрж╛рж░') ||
      lowerInput.includes('market') ||
      lowerInput.includes('ржмрзНржпржмрж╕рж╛') ||
      lowerInput.includes('business')
    ) {
      return `ржХрзЗржирж╛ржмрзЗржЪрж╛ ржУ ржмрзНржпржмрж╕рж╛:
      \nЁЯЫТ ржЖржЬржХрзЗрж░ ржмрж╛ржЬрж╛рж░: ржжрзИржирж┐ржХ ржжрж╛ржо рждрж╛рж▓рж┐ржХрж╛
      \nЁЯПк рж╕рзНржерж╛ржирзАржпрж╝ ржжрзЛржХрж╛ржиржкрж╛ржЯ
      \nЁЯСФ ржЙржжрзНржпрзЛржХрзНрждрж╛: ржмрзНржпржмрж╕рж╛ржпрж╝рж┐ржХ рждржерзНржп
      \nЁЯМ▒ ржирж╛рж░рзНрж╕рж╛рж░рж┐: ржЧрж╛ржЫржкрж╛рж▓рж╛ ржУ ржлрзБрж▓
      \nЁЯФз ржорж┐рж╕рзНрждрзНрж░рж┐: ржмрж┐ржнрж┐ржирзНржи ржХрж╛рж░рж┐ржЧрж░рж┐ рж╕рзЗржмрж╛
      \n\nржмрж┐рж╢рзЗрж╖ рж╕рзБржмрж┐ржзрж╛:
      \n- рж╣рзЛржо ржбрзЗрж▓рж┐ржнрж╛рж░рж┐
      \n- ржкрж╛ржЗржХрж╛рж░рж┐ ржУ ржЦрзБржЪрж░рж╛ ржжрж╛ржо
      \n- ржЕрж░рзНржбрж╛рж░ ржмрзБржХрж┐ржВ`;
    }

    // Basic greetings
    if (
      lowerInput.includes('рж╣рзНржпрж╛рж▓рзЛ') ||
      lowerInput.includes('hello') ||
      lowerInput.includes('рж╣рж╛ржЗ') ||
      lowerInput.includes('hi') ||
      lowerInput.includes('рж╕рж╛рж▓рж╛ржо') ||
      lowerInput.includes('рж╕рж╛рж▓рж╛ржорзБржпрж╝рж╛рж▓рж╛ржЗржХрзБржо')
    ) {
      return `ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо! ЁЯСЛ
      \nржзрзБржиржЯ.ржЕрзНржпрж╛ржкрзЗ ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржо!
      \n\nржЖржорж┐ ржЖржкржирж╛рж░ ржбрж┐ржЬрж┐ржЯрж╛рж▓ рж╕рж╣рж╛ржпрж╝ржХред ржЖржорж┐ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐:
      \nтАв рж╕рзНржерж╛ржирзАржпрж╝ рж╕рзЗржмрж╛ ржЦрзБржБржЬрзЗ ржкрзЗрждрзЗ
      \nтАв ржпрзЛржЧрж╛ржпрзЛржЧрзЗрж░ рждржерзНржп ржЬрж╛ржирждрзЗ
      \nтАв ржмрж┐ржнрж┐ржирзНржи ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ
      \nтАв ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛ ржирж┐рждрзЗ
      \n\nржХрзА ржЬрж╛ржирждрзЗ ржЪрж╛ржи?`;
    }

    // Thank you responses
    if (
      lowerInput.includes('ржзржирзНржпржмрж╛ржж') ||
      lowerInput.includes('thank') ||
      lowerInput.includes('thanks') ||
      lowerInput.includes('рж╢рзБржХрж░рж┐ржпрж╝рж╛')
    ) {
      return `ржЖржкржирж╛ржХрзЗржУ ржзржирзНржпржмрж╛ржж! ЁЯЩП
      \nржзрзБржиржЯ.ржЕрзНржпрж╛ржк ржЖржкржирж╛рж░ рж╕рзЗржмрж╛ржпрж╝ рж╕ржмрж╕ржоржпрж╝ ржкрзНрж░рж╕рзНрждрзБрждред
      \nржЖрж░ржУ ржХрзЛржи рж╕рж╛рж╣рж╛ржпрзНржп ржкрзНрж░ржпрж╝рзЛржЬржи рж╣рж▓рзЗ ржЬрж╛ржирж╛ржмрзЗржиред
      \n\nржзрзБржиржЯ ржЙржкржЬрзЗрж▓рж╛рж░ ржЙржирзНржиржпрж╝ржирзЗ ржЖржорж░рж╛ ржкрзНрж░рждрж┐рж╢рзНрж░рзБрждрж┐ржмржжрзНржз! ЁЯМЯ`;
    }

    // How to use the app
    if (
      lowerInput.includes('ржХрж┐ржнрж╛ржмрзЗ') ||
      lowerInput.includes('how') ||
      lowerInput.includes('ржмрзНржпржмрж╣рж╛рж░') ||
      lowerInput.includes('use') ||
      lowerInput.includes('help')
    ) {
      return `ржзрзБржиржЯ.ржЕрзНржпрж╛ржк ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржирж┐ржпрж╝ржо:
      \nЁЯУ▒ рж╣рзЛржо ржкрзЗржЬ:
      \nтАв ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ ржжрзЗржЦрзБржи (рзйрзл+ ржзрж░ржирзЗрж░ рж╕рзЗржмрж╛)
      \nтАв рж╕рж╛рж░рзНржЪ ржмржХрзНрж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи
      \nтАв ржирзЛржЯрж┐рж╢ ржорж╛рж░рзНржХрж┐ ржжрзЗржЦрзБржи
      \n\nЁЯФН рж╕рзЗржмрж╛ ржЦрзЛржБржЬрж╛рж░ ржкржжрзНржзрждрж┐:
      \nтАв ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐рждрзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи
      \nтАв ржлрж┐рж▓рзНржЯрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи
      \nтАв ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ рждржерзНржп ржжрзЗржЦрзБржи
      \nтАв рж╕рж░рж╛рж╕рж░рж┐ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи
      \n\nЁЯТб ржЯрж┐ржкрж╕: ржирж┐ржпрж╝ржорж┐ржд ржЕрзНржпрж╛ржк ржЪрзЗржХ ржХрж░рзБржи ржирждрзБржи рж╕рзЗржмрж╛рж░ ржЬржирзНржп!`;
    }

    // Contact information
    if (
      lowerInput.includes('ржпрзЛржЧрж╛ржпрзЛржЧ') ||
      lowerInput.includes('contact') ||
      lowerInput.includes('ржлрзЛржи') ||
      lowerInput.includes('phone') ||
      lowerInput.includes('ржЗржорзЗржЗрж▓') ||
      lowerInput.includes('email')
    ) {
      return `ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи:
      \nЁЯУЮ рж╣ржЯрж▓рж╛ржЗржи: рзжрззрзнрззрзирзлрзирзлрзпрззрзж
      \nЁЯУз ржЗржорзЗржЗрж▓: ridoan.zisan@gmail.com
      \nЁЯМР ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ: dhunat.app
      \nЁЯУН ржарж┐ржХрж╛ржирж╛: ржзрзБржиржЯ, ржмржЧрзБржбрж╝рж╛
      \n\nЁЯТм ржлрж┐ржбржмрзНржпрж╛ржХ ржУ ржкрж░рж╛ржорж░рзНрж╢:
      \nтАв "ржЖржорж╛рж░ ржЕрзНржпрж╛ржк" ржкрзЗржЬрзЗ ржпрж╛ржи
      \nтАв ржпрзЛржЧрж╛ржпрзЛржЧ ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзБржи
      \nтАв ржЖржкржирж╛рж░ ржорждрж╛ржоржд ржЬрж╛ржирж╛ржи
      \n\nржЖржорж░рж╛ ржЖржкржирж╛рж░ ржорждрж╛ржорждржХрзЗ ржЧрзБрж░рзБрждрзНржм ржжрж┐ржЗ! ЁЯдЭ`;
    }

    // Emergency services
    if (
      lowerInput.includes('ржЬрж░рзБрж░рж┐') ||
      lowerInput.includes('emergency') ||
      lowerInput.includes('ржПржорзНржмрзБрж▓рзЗржирзНрж╕') ||
      lowerInput.includes('ambulance') ||
      lowerInput.includes('ржлрж╛ржпрж╝рж╛рж░') ||
      lowerInput.includes('fire')
    ) {
      return `ЁЯЪи ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛:
      \nЁЯУЮ ржЬрж╛рждрзАржпрж╝ ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛: рзпрзпрзп
      \nЁЯЪС ржПржорзНржмрзБрж▓рзЗржирзНрж╕: рззрзжрзи
      \nЁЯСо ржкрзБрж▓рж┐рж╢: рззрзжрзж
      \nЁЯЪТ ржлрж╛ржпрж╝рж╛рж░ рж╕рж╛рж░рзНржнрж┐рж╕: рззрзпрзп
      \n\nЁЯПе рж╕рзНржерж╛ржирзАржпрж╝ ржЬрж░рзБрж░рж┐ рж╕рзЗржмрж╛:
      \nтАв рж╣рж╛рж╕ржкрж╛рждрж╛рж▓ ржУ ржХрзНрж▓рж┐ржирж┐ржХ
      \nтАв рж░ржХрзНрждржжрж╛рждрж╛ рждрж╛рж▓рж┐ржХрж╛
      \nтАв ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржЬрж░рзБрж░рж┐ ржиржорзНржмрж░
      \n\nтЪая╕П ржЬрж░рзБрж░рж┐ ржЕржмрж╕рзНржерж╛ржпрж╝ ржкрзНрж░ржержорзЗ рзпрзпрзп ржиржорзНржмрж░рзЗ ржХрж▓ ржХрж░рзБржи!`;
    }

    return null;
  };

  useEffect(() => {
    if (isChatOpen) {
      inputRef.current?.focus();
    }
  }, [isChatOpen]);

  useEffect(() => {
    scrollToBottom();
  }, [messages, isLoading]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim() || isLoading) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      content: input.trim(),
      role: 'user',
      timestamp: new Date(),
    };

    setMessages((prev) => [...prev, userMessage]);
    setInput('');
    setIsLoading(true);

    // Get constant reply
    const response = getConstantReply(userMessage.content) || 
      'ржжрзБржГржЦрж┐ржд, ржПржЗ ржмрж┐рж╖ржпрж╝рзЗ ржЖржорж╛рж░ ржХрж╛ржЫрзЗ рждржерзНржп ржирзЗржЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЕржирзНржп ржХрж┐ржЫрзБ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи ржЕржержмрж╛ "рж╕рж╛рж╣рж╛ржпрзНржп" рж▓рж┐ржЦрзБржиред';

    setTimeout(() => {
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        content: response,
        role: 'assistant',
        timestamp: new Date(),
      };
      setMessages((prev) => [...prev, aiMessage]);
      setIsLoading(false);
      inputRef.current?.focus();
    }, 800);
  };

  // Modern chat icon component
  const ChatIcon = ({ size = 24, className = '' }) => (
    <MessageCircle 
      size={size} 
      className={`${className}`}
    />
  );

  return (
    <div
      className="fixed bottom-4 right-4 flex flex-col items-end gap-2 z-50"
      ref={containerRef}
    >
      {/* Floating Chat Button */}
      <button
        onClick={() => setIsChatOpen(true)}
        className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-3 sm:p-4 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 focus:outline-none focus:ring-4 focus:ring-blue-300"
        title="ржЪрзНржпрж╛ржЯ ржХрж░рзБржи"
        style={{
          boxShadow: '0 8px 25px rgba(59, 130, 246, 0.4)'
        }}
      >
        <ChatIcon size={20} className="sm:w-6 sm:h-6" />
        <div className="absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
      </button>

      {/* Chat Window */}
      {isChatOpen && (
        <div className="fixed inset-0 sm:relative sm:inset-auto sm:bottom-0 sm:right-0 sm:w-80 lg:w-96 bg-white rounded-none sm:rounded-xl shadow-2xl z-50 flex flex-col max-h-screen sm:max-h-[500px] border-0 sm:border border-gray-200">
          {/* Chat Header */}
          <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-3 sm:p-4 rounded-none sm:rounded-t-xl flex justify-between items-center border-b border-blue-500">
            <div className="flex items-center gap-3">
              <div className="relative">
                <ChatIcon className="w-6 h-6" />
                <div className="absolute -bottom-1 -right-1 w-3 h-3 bg-green-400 rounded-full border-2 border-white"></div>
              </div>
              <div>
                <h2 className="font-bold text-lg">ржзрзБржиржЯ рж╕рж╣рж╛ржпрж╝ржХ</h2>
                <p className="text-xs text-blue-100">ржЕржирж▓рж╛ржЗржи</p>
              </div>
            </div>
            <button
              onClick={() => setIsChatOpen(false)}
              className="text-white/80 hover:text-white transition-colors p-1 hover:bg-white/10 rounded"
              aria-label="ржЪрзНржпрж╛ржЯ ржмржирзНржз ржХрж░рзБржи"
            >
              <X size={20} />
            </button>
          </div>

          {/* Messages Container */}
          <div className="flex-1 overflow-y-auto p-3 sm:p-4 space-y-4 bg-gray-50">
            {messages.length === 0 && (
              <div className="text-center mt-8">
                <div className="mb-4">
                  <ChatIcon className="w-12 h-12 mx-auto text-blue-500" />
                </div>
                <p className="text-xl font-medium text-gray-800">рж╕рзНржмрж╛ржЧрждржо! ЁЯСЛ</p>
                <p className="text-gray-600 mt-2 text-sm">
                  ржзрзБржиржЯ.ржЕрзНржпрж╛ржк рж╕ржорзНржкрж░рзНржХрзЗ ржпрзЗржХрзЛржирзЛ ржкрзНрж░рж╢рзНржи ржХрж░рзБржи
                </p>
                <div className="mt-4 flex flex-wrap gap-2 justify-center">
                  <button
                    onClick={() => setInput('рж╕рзЗржмрж╛')}
                    className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs hover:bg-blue-200 transition-colors"
                  >
                    рж╕рзЗржмрж╛рж╕ржорзВрж╣
                  </button>
                  <button
                    onClick={() => setInput('ржпрзЛржЧрж╛ржпрзЛржЧ')}
                    className="px-3 py-1 bg-green-100 text-green-800 rounded-full text-xs hover:bg-green-200 transition-colors"
                  >
                    ржпрзЛржЧрж╛ржпрзЛржЧ
                  </button>
                  <button
                    onClick={() => setInput('ржмрзНржпржмрж╣рж╛рж░')}
                    className="px-3 py-1 bg-purple-100 text-purple-800 rounded-full text-xs hover:bg-purple-200 transition-colors"
                  >
                    ржХрж┐ржнрж╛ржмрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи
                  </button>
                </div>
              </div>
            )}

            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex items-start gap-2 ${
                  message.role === 'user' ? 'flex-row-reverse' : ''
                }`}
              >
                <div
                  className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${
                    message.role === 'user' 
                      ? 'bg-blue-500' 
                      : 'bg-gradient-to-r from-blue-500 to-purple-500'
                  }`}
                >
                  {message.role === 'user' ? (
                    <User className="w-4 h-4 text-white" />
                  ) : (
                    <ChatIcon size={16} className="text-white" />
                  )}
                </div>
                <div
                  className={`rounded-2xl px-3 py-2 max-w-[85%] sm:max-w-[75%] ${
                    message.role === 'user'
                      ? 'bg-blue-500 text-white'
                      : 'bg-white text-gray-800 border border-gray-200 shadow-sm'
                  }`}
                >
                  <p className="text-sm whitespace-pre-wrap leading-relaxed">
                    {message.content}
                  </p>
                  <p className={`text-xs mt-1 ${
                    message.role === 'user' ? 'text-blue-100' : 'text-gray-500'
                  }`}>
                    {format(message.timestamp, 'h:mm a')}
                  </p>
                </div>
              </div>
            ))}

            {isLoading && (
              <div className="flex items-start gap-2">
                <div className="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center">
                  <ChatIcon size={16} className="text-white" />
                </div>
                <div className="bg-white rounded-2xl px-3 py-2 border border-gray-200">
                  <div className="flex gap-1">
                    <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                    <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                    <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                  </div>
                </div>
              </div>
            )}

            <div ref={messagesEndRef} />
          </div>

          {/* Input Form */}
          <div className="border-t border-gray-200 p-3 sm:p-4 bg-white rounded-none sm:rounded-b-xl">
            <form onSubmit={handleSubmit} className="flex gap-2">
              <input
                ref={inputRef}
                type="text"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                placeholder="ржЖржкржирж╛рж░ ржкрзНрж░рж╢рзНржи рж▓рж┐ржЦрзБржи..."
                disabled={isLoading}
                className="flex-1 rounded-full bg-gray-100 border-0 px-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:bg-white disabled:opacity-50 disabled:cursor-not-allowed placeholder-gray-500"
              />
              <button
                type="submit"
                disabled={!input.trim() || isLoading}
                className="bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-full px-3 py-2 hover:from-blue-700 hover:to-purple-700 transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-1 shadow-md hover:shadow-lg"
              >
                <Send className="w-4 h-4" />
              </button>
            </form>
            <p className="text-xs text-gray-500 mt-2 text-center">
              ржзрзБржиржЯ.ржЕрзНржпрж╛ржк ржЖржкржирж╛рж░ рж╕рзЗржмрж╛ржпрж╝ рзирзк/рзн
            </p>
          </div>
        </div>
      )}
    </div>
  );
};

export default LiveChat;
